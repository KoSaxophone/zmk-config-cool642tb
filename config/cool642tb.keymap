#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        esc {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <22 23>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <34 35>;
        };

        BS {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        lclk {
            bindings = <&mkp LCLK>;
            key-positions = <18 19>;
        };

        rclk {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
        };

        spacel {
            bindings = <&kp SPACE>;
            key-positions = <38 37>;
        };

        spacer {
            bindings = <&kp SPACE>;
            key-positions = <40 41>;
        };

        tabctrlshift {
            bindings = <&kp LS(LC(TAB))>;
            key-positions = <0 10 22>;
        };

        pageup {
            bindings = <&msc SCRL_DOWN>;
            key-positions = <1 2 3>;
        };

        pagedown {
            bindings = <&msc SCRL_UP>;
            key-positions = <35 36 37>;
        };

        pageright {
            bindings = <&msc SCRL_LEFT>;
            key-positions = <14 26 38>;
        };

        pageleft {
            bindings = <&msc SCRL_RIGHT>;
            key-positions = <34 22 10>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W      &kp E             &kp R         &kp T                                                            &kp Y           &kp U  &kp I      &kp O       &kp P
&kp A           &kp S      &kp D             &kp F         &kp G           &kp LG(LS(NUMBER_4))    &lt 5 MINUS              &kp H           &kp J  &kp K      &kp L       &kp ENTER
&kp Z           &kp X      &kp C             &kp V         &kp B           &lt 4 LEFT_PARENTHESIS  &lt 3 RIGHT_PARENTHESIS  &kp N           &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LANGUAGE_2  &lt 2 SPACE             &lt 1 SPACE              &kp LANGUAGE_1                                &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        shortcut {
            bindings = <
&kp F1         &kp F2     &kp F3             &kp F4         &kp F5                                                  &kp F6          &kp F7          &kp F8        &kp F9      &kp F10
&kp LS(LG(Z))  &kp LG(S)  &kp DOUBLE_QUOTES  &kp SEMICOLON  &kp COLON     &kp N1          &kp INT_KATAKANAHIRAGANA  &kp LEFT        &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT   &kp ENTER
&kp LG(Z)      &kp LG(X)  &kp LG(C)          &kp LG(V)      &kp B         &kp LEFT_BRACE  &kp RIGHT_BRACE           &kp LC(SPACE)   &kp RG(SPACE)   &kp COMMA     &kp PERIOD  &kp QUESTION
&kp RSHIFT     &kp TAB    &kp LCTRL          &kp RGUI       &kp LEFT_ALT  &kp UNDERSCORE  &to 1                     &bt BT_CLR_ALL                                            &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>;
        };

        number {
            bindings = <
&kp N1           &kp N2       &kp N3        &kp N4        &kp N5                                             &kp N6        &kp N7  &kp EQUAL      &kp TILDE         &kp PIPE
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR    &kp PERCENT   &to 0             &kp UNDERSCORE     &kp SLASH     &kp N4  &kp N5         &kp N6            &kp ENTER
&kp PLUS         &kp MINUS    &kp ASTERISK  &kp SLASH     &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp ASTERISK  &kp N1  &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION
&bt BT_PRV       &bt BT_NXT   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &mo 2             &kp PLUS           &kp EQUAL                                              &kp N0
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        ARROW {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 3 SPACE  &kp N5  &kp N6  &lt 1 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        mitei {
            bindings = <
&kp Q       &kp W    &kp E             &kp R         &kp T                            &kp Y          &kp U  &kp I     &kp O     &kp P
&kp A       &kp S    &kp D             &kp F         &kp G     &kp N1    &kp N2       &kp H          &kp J  &kp K     &kp L     &kp ENTER
&kp Z       &kp X    &kp C             &kp V         &kp B     &kp N3    &kp N4       &kp N          &kp M  &mkp MB1  &mkp MB2  &kp SLASH
&kp ESCAPE  &kp TAB  &kp LEFT_CONTROL  &kp LEFT_GUI  &mkp MB1  &mkp MB2  &lt 1 SPACE  &kp BACKSPACE                             &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 3 SPACE  &kp N5  &kp N6  &lt 1 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
